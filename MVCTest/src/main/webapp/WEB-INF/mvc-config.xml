<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- controller를 scan하도록 설정 -->
    <context:component-scan base-package="com.ssafy.controller"/>

	
	<!-- web에서 사용하는 Annotation을 적용시키기위해 쓰는 태그임. -->
    <mvc:annotation-driven />

	<!-- view resolver 중에 하나.(jsp) -->
	<!-- 
		- InternalResourceViewResolver는 DefaultUrlBasedViewResolver를 상속받은 Resolver. 
		- url에 해당하는 view를 찾아 service
		- 모든 url에 다적용돼서 잘 해야됨.
		- prefix property로  전달된 url 앞에 경로를 추가
		- suffix property로 전달된 url 뒤에 경로를 추가
		- 서버 내부의 모든 경로에 있는 자원을 서비스한다. - (WEB-INF 까지 => WEB-INF는 무적권 xml과 class만 서비스 할 수 있는 경로인데 jsp도 가능함.)
	-->
	
<!-- 	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        예: 'showMessage'라는 view name 이 있으면'/WEB-INF/jsp/showMessage.jsp' 이렇게 매핑해줌.
	        <property name="prefix" value="/WEB-INF/view/"/> 
	        <property name="suffix" value=".jsp"/>
	</bean> 
 -->

</beans>
